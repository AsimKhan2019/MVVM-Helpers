//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.PODataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class PODataSource { }
#else

	public class PODataSource : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public PODataSource()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/MasterDetailTest;component/SampleData/PODataSource/PODataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private PurchaseOrders _PurchaseOrders = new PurchaseOrders();

		public PurchaseOrders PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
		}
	}

	public class PurchaseOrdersItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _CustomerName = string.Empty;

		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}

			set
			{
				if (this._CustomerName != value)
				{
					this._CustomerName = value;
					this.OnPropertyChanged("CustomerName");
				}
			}
		}

		private string _OrderDate = string.Empty;

		public string OrderDate
		{
			get
			{
				return this._OrderDate;
			}

			set
			{
				if (this._OrderDate != value)
				{
					this._OrderDate = value;
					this.OnPropertyChanged("OrderDate");
				}
			}
		}

		private string _Email = string.Empty;

		public string Email
		{
			get
			{
				return this._Email;
			}

			set
			{
				if (this._Email != value)
				{
					this._Email = value;
					this.OnPropertyChanged("Email");
				}
			}
		}

		private OrderDetails _OrderDetails = new OrderDetails();

		public OrderDetails OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
		}
	}

	public class PurchaseOrders : System.Collections.ObjectModel.ObservableCollection<PurchaseOrdersItem>
	{ 
	}

	public class OrderDetailsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private double _InventoryId = 0;

		public double InventoryId
		{
			get
			{
				return this._InventoryId;
			}

			set
			{
				if (this._InventoryId != value)
				{
					this._InventoryId = value;
					this.OnPropertyChanged("InventoryId");
				}
			}
		}

		private string _Description = string.Empty;

		public string Description
		{
			get
			{
				return this._Description;
			}

			set
			{
				if (this._Description != value)
				{
					this._Description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
	}

	public class OrderDetails : System.Collections.ObjectModel.ObservableCollection<OrderDetailsItem>
	{ 
	}
#endif
}
