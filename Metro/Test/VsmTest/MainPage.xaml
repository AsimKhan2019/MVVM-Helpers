<Page x:Class="VsmTest.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:System.Windows.Interactivity" xmlns:Interactivity1="using:JulMar.Windows.Interactivity"
    xmlns:Media="using:JulMar.Windows.Interactivity.Media" xmlns:viewModels="using:VsmTest.ViewModels"
      mc:Ignorable="d">

    <Page.DataContext>
        <viewModels:MainViewModel />
    </Page.DataContext>
    
    <Grid Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MoveStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:5">
                        <VisualTransition.GeneratedEasingFunction>
                            <ElasticEase EasingMode="EaseInOut"/>
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Top">
                    <Storyboard>
                            <DoubleAnimation Duration="0" To="-214" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                            <DoubleAnimation Duration="0" To="28" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                        </Storyboard>
                </VisualState>
                <VisualState x:Name="Center" />
                <VisualState x:Name="Left">
                	<Storyboard>
                		<DoubleAnimation Duration="0" To="12" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="-458" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="96" Storyboard.TargetProperty="(Rectangle.RadiusX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="96" Storyboard.TargetProperty="(Rectangle.RadiusY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="-27.611" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<ColorAnimation Duration="0" To="#FFB91F18" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                	</Storyboard>
                </VisualState>
                <VisualState x:Name="Right">
                	<Storyboard>
                		<DoubleAnimation Duration="0" To="562" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="81" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="0.615" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="0.502" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="-30.233" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                		<DoubleAnimation Duration="0" To="45" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
                	</Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Rectangle x:Name="rectangle" Fill="#FF1818B9" HorizontalAlignment="Left" Height="285" Margin="509,224,0,0" Stroke="Black" VerticalAlignment="Top" Width="338" RenderTransformOrigin="0.5,0.5">
        	<Rectangle.Projection>
        		<PlaneProjection/>
        	</Rectangle.Projection>
            <Rectangle.RenderTransform>
                <CompositeTransform/>
            </Rectangle.RenderTransform>
        </Rectangle>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
        
        	<Button Content="Top" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="10,5" Margin="20">
        		<Interactivity:Interaction.Triggers>
        			<Interactivity:EventTrigger EventName="Click">
        				<Interactivity1:GoToStateAction StateName="Top" /> 
        			</Interactivity:EventTrigger>
        		</Interactivity:Interaction.Triggers>
        	</Button>

            <Button Content="Left" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="10,5" Margin="20" Command="{Binding Left}" />
        	<Button Content="Right" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="10,5" Margin="20" Command="{Binding Right}" />
        	
            <Button Content="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="10,5" Margin="20">
        		<Interactivity:Interaction.Triggers>
        			<Interactivity:EventTrigger EventName="Click">
        				<Interactivity1:GoToStateAction StateName="Center" /> 
        			</Interactivity:EventTrigger>
        		</Interactivity:Interaction.Triggers>
        	</Button>
        
            <ComboBox ItemsSource="{Binding PossibleDirections}" SelectedItem="{Binding Direction,Mode=TwoWay}" Margin="20" Width="200" />
            
        </StackPanel>
        
        <Interactivity:Interaction.Triggers>
            <!-- Play sound after 1 second -->
            <Interactivity1:TimerTrigger MillisecondsPerTick="1000" TotalTicks="1">
                <Media:PlaySoundAction Source="tada.wav" Volume="1" />
            </Interactivity1:TimerTrigger>
            
            <!-- Respond to the VM event -->
            <Interactivity1:ViewModelTrigger EventName="GoLeft" Target="{Binding}">
                <Interactivity1:GoToStateAction StateName="Left" />
            </Interactivity1:ViewModelTrigger>
            
            <!-- To a bool DataBinding-->
            <Interactivity1:DataTrigger Binding="{Binding MoveRight}" Value="True">
                <Interactivity1:GoToStateAction  StateName="Right" />
            </Interactivity1:DataTrigger>

            <!-- To a combo box string data binding, every change triggers state -->
            <Interactivity1:BindingTrigger Binding="{Binding Direction}">
                <Interactivity1:GoToStateAction /> <!-- No State Name! -->
            </Interactivity1:BindingTrigger>

        </Interactivity:Interaction.Triggers>

    </Grid>

</Page>
